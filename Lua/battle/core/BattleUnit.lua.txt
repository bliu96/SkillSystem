local AbilitySystemComponent = require("battle.abilitySystem.AbilitySystemComponent")

---@class BattleUnit
---@field New fun(unitData, world : BattleWorld) : BattleUnit
local BattleUnit = battle.class("BattleUnit")

function BattleUnit:Ctor(unitData, world)
    self.uid = 0
    self.identity = battle.enums.Identity.Left
    self.index = 1
    self.world = world

    self:InitAbilitySystem()
end

function BattleUnit:InitAbilitySystem()
    local asc = AbilitySystemComponent.New()
    self.asc = asc

    local attributes = {}
    asc:InitAttributeSet(attributes)

    local abilities = {}
    for i, ability in ipairs(abilities) do
        asc:GrantAbility(ability)
    end
end

function BattleUnit:Tick()
    -- before Action
    --- action
    local ability = self:ChooseAbility()
    if ability then
        self.asc:TryActivateAbility(ability)
    end
    --- after action
end

---@return GameplayAbilitySpec | nil
function BattleUnit:ChooseAbility()
    return nil
end

function BattleUnit:Die()
    
end

return BattleUnit